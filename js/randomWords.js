// Generated by CoffeeScript 1.8.0
(function() {
  var coeff, normalized, selectRandomSet, selectRandomWord, selectRandomWordFromRandomSet, withWages,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  require('sugar');

  withWages = require('./sets');

  coeff = 1 / withWages.reduce(function(sum, wageset) {
    return sum + wageset.wage;
  }, 0);

  normalized = withWages.reduce(function(map, wageSet) {
    return {
      coll: map.coll + wageSet.wage * coeff,
      map: map.map.concat({
        set: wageSet.set,
        wage: map.coll + wageSet.wage * coeff
      })
    };
  }, {
    coll: 0,
    map: []
  }).map.sortBy('wage');

  selectRandomSet = function() {
    var x;
    x = Math.random();
    return normalized.find(function(wageset) {
      return wageset.wage >= x;
    }) || wageset.last();
  };

  selectRandomWord = (function() {
    var last5, randomizer;
    last5 = [null, null, null, null, null, null, null];
    return randomizer = function(set) {
      var x, y;
      x = set.length;
      y = set[Math.floor(Math.random() * x)];
      y = __indexOf.call(last5, y) >= 0 ? randomizer(set) : y;
      last5 = last5.from(1).concat(y);
      return y;
    };
  })();

  selectRandomWordFromRandomSet = function() {
    return selectRandomWord(selectRandomSet().set);
  };

  module.exports = selectRandomWordFromRandomSet;

}).call(this);

//# sourceMappingURL=randomWords.js.map
